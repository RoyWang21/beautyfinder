from PIL import Imagefrom autocrop import Cropperimport pathlibimport cv2import numpy as npimgdir_path = pathlib.Path('.')#('./data')file_list = sorted([str(path) for path in imgdir_path.glob('*.JPG')])file_list = [fn.split('.')[0] for fn in file_list]print(file_list)cropper = Cropper()file_list = ['IMG_2006',  'IMG_2416']modelFile = "res10_300x300_ssd_iter_140000.caffemodel"configFile = "deploy.prototxt.txt"net = cv2.dnn.readNetFromCaffe(configFile, modelFile)split_schedule = [[1,1],[1,2],[2,1],[2,3],[3,2], None]# file_list = ['IMG_8714']from split_image import split_image, reverse_splitfor file in file_list:    face_found = False    idx = 0    while not face_found:        split = split_schedule[idx]        if not split: break        print('split:', split)        split_image(file+'.JPG', split[0], split[1], should_square=False, should_cleanup=False)        sub_file_list = [file+'_'+str(i)+'.JPG' for i in range(split[0]*split[1])]        for sub_file in sub_file_list:            print(f'detecting face on {sub_file}')                img = cv2.imread(sub_file)            h, w = img.shape[:2]            print(h, w)            blob = cv2.dnn.blobFromImage(                cv2.resize(img, (300, 300)),                 # img,                1.0,                # (w, h),                (300,300),                (104.0, 117.0, 123.0))            net.setInput(blob)            faces = net.forward()            #to draw faces on image            for i in range(faces.shape[2]):                    confidence = faces[0, 0, i, 2]                    if confidence > 0.5:                        face_found = True                        print('--face detected!')                        box = faces[0, 0, i, 3:7] * np.array([w, h, w, h])                        (x, y, x1, y1) = box.astype("int")                        img_box = cv2.rectangle(img, (x, y), (x1, y1), (0, 0, 255), 2)                        break        if not face_found: print('--face not found, splitting image and retrying...')        idx += 1        reverse_split(sub_file_list, split[0], split[1], file+'_rev.png', should_cleanup=True)            if face_found:        cv2.startWindowThread()        cv2.namedWindow("Image_with_face")        cv2.imshow('Image_with_face', img_box)         cv2.waitKey(800)        cv2.destroyAllWindows()        